#ifndef _GPRS_
#define _GPRS_

#include "at_commands.h"

#define LOG

#define ACCESS_POINT_NAME "\"wap.gprs.unifon.com.ar\"" // Movistar
#define APN_USER "\"wep\""
#define APN_PASSWORD "\"wep\""

#define PROVIDER_NAME "UNIFON"

#define COMMA ","

#define REMOTE_SERVER_PUBLIC_IP "\"190.19.135.110\""
#define SOCKET_PORT "\"2323\""
#define CONNECTION_TYPE "\"TCP\""

#define SERVER_INFO CONNECTION_TYPE COMMA REMOTE_SERVER_PUBLIC_IP COMMA SOCKET_PORT

#define MIN_SIGNAL_QUALITY_VALUE 5

#define MAX_RESPONSE_LENGTH 100

#define AT_CSTT CSTT ACCESS_POINT_NAME COMMA APN_USER COMMA APN_PASSWORD AT_END
#define AT_CIPSTART CIPSTART SERVER_INFO AT_END

typedef enum {
    DISCONNECTED,
    RESTARTING_MODULE, // AT+CFUN=1,1
    WAITING_FOR_MODULE_RESTART,
    PING, // AT
    WAITING_FOR_PING_RESPONSE,
    REQUESTING_SIGNAL_QUALITY, // AT+CSQ
    ANALYZING_SIGNAL_QUALITY,
    REQUESTING_NETWORK_REGISTRATION_STATUS, // AT+CREG?
    ANALYZING_NETWORK_REGISTRATION_STATUS,
    SETTING_FULL_OPERATION_MODE,  // AT+CFUN=1
    ANALYZING_FULL_OPERATION_MODE_VALUE,
    REQUESTING_SIM_AVAILABILITY, // AT+CPIN?
    ANALYZING_SIM_AVAILABILITY,
    REGISTERING_TO_APN, // AT+CSTT="<your_apn>","<user>","<password>"
    ANALYZING_APN_REGISTRATION,
    SETTING_INTERNET_PROTOCOL_CONTEXT, // AT+CIICR
    ANALYZING_INTERNET_PROTOCOL_CONTEXT,
    GET_ASSIGNED_IP_ADDRESS, // AT+CIFSR
    ANALYZE_ASSIGNED_IP_ADDRESS,
    STABLISHING_REMOTE_SERVER_CONNECTION, // AT+CIPSTART="TCP","<server_public_ip>",">server_port>"
    ANALYZING_REMOTE_SERVER_CONNECTION,
    READY_TO_SEND_DATA, // AT+CIPSEND
    CHECK_CHANNEL,
    SENDING_DATA,
    CHECKING_IF_DATA_WAS_CORRECTLY_SENT,
    CLOSING_CONNECTION, // AT+CIPSHUT
    CHECKING_IF_CONNECTION_WAS_CLOSED,
    MODULE_RESET, // AT+A&F
    ANALYZING_MODULE_RESET,
} gprs_state_t;

typedef struct gprs {
    gprs_state_t state;
} gprs_t;

void updateGprs(void);
void initGprs(void);
void startConnection(void);
bool getConnectionState(void);
void sendData(const char*);
void closeConnection(void);

#endif